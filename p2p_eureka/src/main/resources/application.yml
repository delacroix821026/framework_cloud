#spring-boot:run -Drun.arguments=--server.port=1111,--spring.profiles.active=dev,--eureka.instance.hostname=eurekaserver1
#spring-boot:run -Drun.arguments=--server.port=1112,--spring.profiles.active=dev,--eureka.instance.hostname=eurekaserver2
#spring-boot:run -Drun.arguments=--server.port=1113,--spring.profiles.active=dev,--eureka.instance.hostname=eurekaserver3

---
spring:
  profiles: server1
server:
    port: 1111
eureka:
    client:
        serviceUrl:
            defaultZone: ${ADDITIONAL_EUREKA_SERVER_LIST:http://eurekaserver2:1112/eureka/,http://eurekaserver3:1113/eureka/}
    instance:
        #preferIpAddress: true
        hostname: eurekaserver1
...

---
spring:
  profiles: server2
server:
    port: 1112
eureka:
    client:
        serviceUrl:
            defaultZone: ${ADDITIONAL_EUREKA_SERVER_LIST:http://eurekaserver1:1111/eureka/,http://eurekaserver3:1113/eureka/}
    instance:
        #preferIpAddress: true
        hostname: eurekaserver2
...

---
spring:
  profiles: server3
server:
    port: 1113
eureka:
    client:
        serviceUrl:
            defaultZone: ${ADDITIONAL_EUREKA_SERVER_LIST:http://eurekaserver1:1111/eureka/,http://eurekaserver2:1112/eureka/}
    instance:
        #preferIpAddress: true
        hostname: eurekaserver3
...

---
spring:
    application:
        name: "@project.name@"
    boot:
        admin:
            username: ${security.user.name}       #These two are needed so that the client
            password: ${security.user.password}   #can register at the protected server api
...

---
eureka:
    instance:
        metadata-map:
            user.name: ${security.user.name}
            user.password: ${security.user.password}
            management.context-path: ${management.context-path}
        statusPageUrl: http://${eureka.instance.hostname}:${server.port}/${management.context-path}/info
        healthCheckUrl: http://${eureka.instance.hostname}:${server.port}/${management.context-path}/health
        secure-health-check-url: http://${eureka.instance.hostname}:${server.port}/${management.context-path}/health
    server:
        enable-self-preservation: false
        eviction-interval-timer-in-ms: 4000
    healthcheck:
        enabled: true
    client:
        register-with-eureka: true
        fetch-registry: false
...

---
management:
    security:
        enabled: true
        roles: SUPERUSER
    context-path: /manage
security:
    user:
        name: admin
        password: 123456
    basic:
        enabled: true
        path: ${management.context-path}
...
